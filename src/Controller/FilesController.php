<?php

namespace App\Controller;

use App\Entity\App\Files;
use App\Entity\Olimp;


use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use AppBundle\Form\FormValidationType;

use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;


class FilesController extends Controller
{

    /**
     * @Route("/file/new", name="new_file")
     * Method({"GET", "POST"})
     */
    public function new(Request $request){
        $file = new Files();
        $del=FALSE;
        $file->setDeleted($del);
        $file->setCreated(new \DateTime());
        $form = $this->createFormBuilder($file)
            ->add('name', TextType::class, array('label' => 'TytuÅ‚','attr' => array('class' => 'form-control')))
            ->add('file', FileType::class, array('label' => 'Wstaw plik (pdf, doc, xml, ppt)', 'attr' => array('class' => 'form-control-file')))
            ->add('creator', TextType::class, array('required' => false,'attr' => array('class' => 'form-control')))
            ->add('save', SubmitType::class, array(
                'label' => 'UtwÃ³rz',
                'attr' => array('class' => 'btn btn-primary mt-3')
            ))
            ->getForm();
        $form->handleRequest($request);
        if($form->isSubmitted() && $form->isValid()) {
            $uploaded = $form->get('file')->getData();
            $FileName = 'file'.$this->generateUniqueFileName().'.'.$uploaded->guessExtension();
            $uploaded->move($this->getParameter('files_directory'), $FileName);
            $file->setFile($FileName);
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($file);
            $entityManager->flush();
            return $this->redirectToRoute('file_list');
        }
        return $this->render('files/new.html.twig', array(
            'form' => $form->createView()
        ));
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    /**
     * @Route("/file/list", name="file_list", methods="GET")
     */
    public function artciles() {
        $file= $this->getDoctrine()->getRepository(Files::class)
            ->findBy(
                array('deleted' => 'false'),
                array('created' => 'DESC')
            );


        $pgdb = new Olimp();
        $pgdb->dbConnect();

        $res = $pgdb->Q("SELECT o.uid AS id, o.org_id, o.name AS name, o.surname AS surname
													FROM mainframe.vroles_active_extend o
													
						WHERE o.org_id = 54223  ORDER BY  o.uid
          ");


        return $this->render('files/list.html.twig', array('file' => $file, 'members' => $res));
    }
}
